/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mobilez.ui;

import com.mobilez.dao.HangSanXuatDao;
import com.mobilez.dao.MatHangDAO;
import com.mobilez.models.HangSanXuat;
import com.mobilez.models.MatHang;
import com.mobilez.models.QuocGia;
import com.mobilez.utils.JdbcHelper;
import com.mobilez.utils.Msgbox;
import com.mobilez.utils.XImage;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author LAPTOP
 */
public class JDialogHangHoa extends javax.swing.JDialog {

    /**
     * Creates new form JDialogMatHang
     */
    DefaultComboBoxModel modelCboHSX = new DefaultComboBoxModel();
    DefaultComboBoxModel modelCboQG = new DefaultComboBoxModel();
    MatHangDAO dao = new MatHangDAO();
    public JDialogHangHoa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        modelCboHSX = (DefaultComboBoxModel) cboHSX.getModel();
        modelCboQG = (DefaultComboBoxModel) cboQuocGia.getModel();
        fillCboHSX();
        fillCboQG();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnThemHSX = new javax.swing.JButton();
        txtMaMH = new javax.swing.JTextField();
        lblMaMH = new javax.swing.JLabel();
        lblHSX = new javax.swing.JLabel();
        cboHSX = new javax.swing.JComboBox<>();
        lblTenMH = new javax.swing.JLabel();
        txtTenMH = new javax.swing.JTextField();
        lblDL = new javax.swing.JLabel();
        txtDungLuong = new javax.swing.JTextField();
        lblRAM = new javax.swing.JLabel();
        txtRAM = new javax.swing.JTextField();
        lblHinhMH = new javax.swing.JLabel();
        lblHMH = new javax.swing.JLabel();
        txtMauSac = new javax.swing.JTextField();
        lblMS = new javax.swing.JLabel();
        lblQG = new javax.swing.JLabel();
        cboQuocGia = new javax.swing.JComboBox<>();
        btnThemQG = new javax.swing.JButton();
        txtGiaMua = new javax.swing.JTextField();
        lblGM = new javax.swing.JLabel();
        lblGBL = new javax.swing.JLabel();
        txtGiaBanLe = new javax.swing.JTextField();
        lblBH = new javax.swing.JLabel();
        txtTGBH = new javax.swing.JTextField();
        lblThang = new javax.swing.JLabel();
        btnThemMH = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(34, 116, 173));

        jPanel1.setBackground(new java.awt.Color(34, 116, 173));

        btnThemHSX.setBackground(new java.awt.Color(34, 116, 173));
        btnThemHSX.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnThemHSX.setForeground(new java.awt.Color(255, 255, 255));
        btnThemHSX.setText("Thêm");
        btnThemHSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHSXActionPerformed(evt);
            }
        });

        txtMaMH.setBackground(new java.awt.Color(34, 116, 173));
        txtMaMH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMaMH.setForeground(new java.awt.Color(255, 255, 255));
        txtMaMH.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblMaMH.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblMaMH.setForeground(new java.awt.Color(255, 255, 255));
        lblMaMH.setText("Mã mặt hàng");

        lblHSX.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblHSX.setForeground(new java.awt.Color(255, 255, 255));
        lblHSX.setText("Hãng sản xuất");

        cboHSX.setBackground(new java.awt.Color(34, 116, 173));
        cboHSX.setForeground(new java.awt.Color(255, 255, 255));

        lblTenMH.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblTenMH.setForeground(new java.awt.Color(255, 255, 255));
        lblTenMH.setText("Tên mặt hàng");

        txtTenMH.setBackground(new java.awt.Color(34, 116, 173));
        txtTenMH.setForeground(new java.awt.Color(255, 255, 255));
        txtTenMH.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblDL.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblDL.setForeground(new java.awt.Color(255, 255, 255));
        lblDL.setText("Dung lượng");

        txtDungLuong.setBackground(new java.awt.Color(34, 116, 173));
        txtDungLuong.setForeground(new java.awt.Color(255, 255, 255));
        txtDungLuong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblRAM.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblRAM.setForeground(new java.awt.Color(255, 255, 255));
        lblRAM.setText("RAM");

        txtRAM.setBackground(new java.awt.Color(34, 116, 173));
        txtRAM.setForeground(new java.awt.Color(255, 255, 255));
        txtRAM.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblHinhMH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhMH.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        lblHinhMH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMHMouseClicked(evt);
            }
        });

        lblHMH.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblHMH.setForeground(new java.awt.Color(255, 255, 255));
        lblHMH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHMH.setText("Hình mặt hàng");

        txtMauSac.setBackground(new java.awt.Color(34, 116, 173));
        txtMauSac.setForeground(new java.awt.Color(255, 255, 255));
        txtMauSac.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        txtMauSac.setCaretColor(new java.awt.Color(255, 255, 255));

        lblMS.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblMS.setForeground(new java.awt.Color(255, 255, 255));
        lblMS.setText("Màu sắc");

        lblQG.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblQG.setForeground(new java.awt.Color(255, 255, 255));
        lblQG.setText("Quốc gia");

        cboQuocGia.setBackground(new java.awt.Color(34, 116, 173));
        cboQuocGia.setForeground(new java.awt.Color(255, 255, 255));

        btnThemQG.setBackground(new java.awt.Color(34, 116, 173));
        btnThemQG.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnThemQG.setForeground(new java.awt.Color(255, 255, 255));
        btnThemQG.setText("Thêm");
        btnThemQG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemQGActionPerformed(evt);
            }
        });

        txtGiaMua.setBackground(new java.awt.Color(34, 116, 173));
        txtGiaMua.setForeground(new java.awt.Color(255, 255, 255));
        txtGiaMua.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblGM.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblGM.setForeground(new java.awt.Color(255, 255, 255));
        lblGM.setText("Giá mua");

        lblGBL.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblGBL.setForeground(new java.awt.Color(255, 255, 255));
        lblGBL.setText("Giá bán lẻ");

        txtGiaBanLe.setBackground(new java.awt.Color(34, 116, 173));
        txtGiaBanLe.setForeground(new java.awt.Color(255, 255, 255));
        txtGiaBanLe.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblBH.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblBH.setForeground(new java.awt.Color(255, 255, 255));
        lblBH.setText("Bảo hành");

        txtTGBH.setBackground(new java.awt.Color(34, 116, 173));
        txtTGBH.setForeground(new java.awt.Color(255, 255, 255));
        txtTGBH.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        lblThang.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblThang.setForeground(new java.awt.Color(255, 255, 255));
        lblThang.setText("(Tháng)");

        btnThemMH.setBackground(new java.awt.Color(34, 116, 173));
        btnThemMH.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnThemMH.setForeground(new java.awt.Color(255, 255, 255));
        btnThemMH.setText("Thêm");
        btnThemMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMHActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(34, 116, 173));
        btnClear.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGM)
                    .addComponent(lblGBL))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtGiaMua, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .addComponent(txtGiaBanLe))
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblHSX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblMaMH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(cboHSX, 0, 189, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnThemHSX))
                                .addComponent(txtMaMH)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblTenMH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblDL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTenMH)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtDungLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblMS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblQG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMauSac, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(cboQuocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnThemQG))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(104, 104, 104)
                                    .addComponent(btnThemMH)
                                    .addGap(83, 83, 83)
                                    .addComponent(btnClear))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblBH, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtTGBH, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblThang)))
                            .addGap(0, 60, Short.MAX_VALUE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblHMH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(0, 5, Short.MAX_VALUE)
                            .addComponent(lblHinhMH, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(15, 15, 15)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(303, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGM)
                    .addComponent(txtGiaMua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGBL)
                    .addComponent(txtGiaBanLe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMaMH))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHSX)
                                    .addComponent(cboHSX, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnThemHSX, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTenMH)
                                .addComponent(txtTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDL)
                                .addComponent(txtDungLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblRAM))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMS))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboQuocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblQG)
                                .addComponent(btnThemQG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(121, 121, 121)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTGBH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBH)
                                .addComponent(lblThang))
                            .addGap(35, 35, 35)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnThemMH)
                                .addComponent(btnClear)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(134, 134, 134)
                            .addComponent(lblHinhMH, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(8, 8, 8)
                            .addComponent(lblHMH)))
                    .addGap(19, 19, 19)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemHSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHSXActionPerformed
        // TODO add your handling code here:
        new JDialogHSX(null, true).setVisible(true);
        this.fillCboHSX();
    }//GEN-LAST:event_btnThemHSXActionPerformed

    private void lblHinhMHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMHMouseClicked
        // TODO add your handling code here:
        this.chonAnh();
    }//GEN-LAST:event_lblHinhMHMouseClicked

    private void btnThemQGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemQGActionPerformed
        // TODO add your handling code here:
        new JDialogQuocGia(null, true).setVisible(true);
        this.fillCboQG();
    }//GEN-LAST:event_btnThemQGActionPerformed

    private void btnThemMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMHActionPerformed
        // TODO add your handling code here:
        if (chkForm()) {
            this.insert();
        }

    }//GEN-LAST:event_btnThemMHActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogHangHoa dialog = new JDialogHangHoa(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnThemHSX;
    private javax.swing.JButton btnThemMH;
    private javax.swing.JButton btnThemQG;
    private javax.swing.JComboBox<String> cboHSX;
    private javax.swing.JComboBox<String> cboQuocGia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBH;
    private javax.swing.JLabel lblDL;
    private javax.swing.JLabel lblGBL;
    private javax.swing.JLabel lblGM;
    private javax.swing.JLabel lblHMH;
    private javax.swing.JLabel lblHSX;
    private javax.swing.JLabel lblHinhMH;
    private javax.swing.JLabel lblMS;
    private javax.swing.JLabel lblMaMH;
    private javax.swing.JLabel lblQG;
    private javax.swing.JLabel lblRAM;
    private javax.swing.JLabel lblTenMH;
    private javax.swing.JLabel lblThang;
    private javax.swing.JTextField txtDungLuong;
    private javax.swing.JTextField txtGiaBanLe;
    private javax.swing.JTextField txtGiaMua;
    private javax.swing.JTextField txtMaMH;
    private javax.swing.JTextField txtMauSac;
    private javax.swing.JTextField txtRAM;
    private javax.swing.JTextField txtTGBH;
    private javax.swing.JTextField txtTenMH;
    // End of variables declaration//GEN-END:variables

public void fillCboHSX() {
        try {
            HangSanXuatDao daohsx = new HangSanXuatDao();
            List<HangSanXuat> lstHSX = daohsx.selectAll();
            modelCboHSX.removeAllElements();
            for (HangSanXuat s : lstHSX) {
                modelCboHSX.addElement(s);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillCboQG() {
        try {
            List<QuocGia> lstQG = new ArrayList<>();
            String sql = "select * from QUOCGIA";
            ResultSet rs = JdbcHelper.query(sql);
            modelCboQG.removeAllElements();
            while (rs.next()) {
                QuocGia qg = new QuocGia(rs.getString(1), rs.getString(2));
                lstQG.add(qg);
            }

            for (QuocGia s : lstQG) {
                modelCboQG.addElement(s);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void chonAnh() {
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "gif", "png", "jpeg");
            fileChooser.addChoosableFileFilter(filter);
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                XImage.save(file);
                ImageIcon icon = XImage.read(file.getName());
                Image image = icon.getImage(); // transform it 
                Image newimg = image.getScaledInstance(lblHinhMH.getWidth(), lblHinhMH.getHeight(), java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
                icon = new ImageIcon(newimg);  // transform it back
                lblHinhMH.setIcon(icon);
                lblHinhMH.setToolTipText(file.getName());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean chkForm() {
        if (txtMaMH.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống mã mặt hàng!");
            txtMaMH.setText("");
            txtMaMH.requestFocus();
            return false;
        }
        if (!dao.checkDuplicate(txtMaMH.getText().trim())) {
            Msgbox.alert(null, "Mã mặt hàng đã tồn tại!");
            txtMaMH.requestFocus();
            return false;
        }
        //validate txtTenMH
        if (txtTenMH.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống tên mặt hàng!");
            txtTenMH.setText("");
            txtTenMH.requestFocus();
            return false;
        }
        //validate RAm
        if (txtRAM.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống RAM!");
            txtRAM.setText("");
            txtRAM.requestFocus();
            return false;
        }
        try {
            Integer.parseInt(txtRAM.getText());
        } catch (Exception e) {
            Msgbox.alert(null, "RAM phải là số!");
            txtRAM.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtRAM.getText()) <= 0) {
            Msgbox.alert(null, "RAM phải lơn hơn 0!");
            txtRAM.setText("");
            txtRAM.requestFocus();
            return false;
        }
        //validate dung luong
        if (txtDungLuong.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống dung lượng!");
            txtDungLuong.setText("");
            txtDungLuong.requestFocus();
            return false;
        }
        try {
            Integer.parseInt(txtDungLuong.getText());
        } catch (Exception e) {
            Msgbox.alert(null, "Dung lượng phải là số!");
            txtDungLuong.setText("");
            txtDungLuong.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtDungLuong.getText()) <= 0) {
            Msgbox.alert(null, "Dung lượng phải lơn hơn 0!");
            txtDungLuong.setText("");
            txtDungLuong.requestFocus();
            return false;
        }
        //validate mau sac
        if (txtMauSac.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống màu sắc!");
            txtMauSac.setText("");
            txtMauSac.requestFocus();
            return false;
        }

        //validate gia mua
        if (txtGiaMua.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống giá mua!");
            txtGiaMua.setText("");
            txtGiaMua.requestFocus();
            return false;
        }
        try {
            Integer.parseInt(txtGiaMua.getText());
        } catch (Exception e) {
            Msgbox.alert(null, "Giá mua phải là số!");
            txtGiaMua.setText("");
            txtGiaMua.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtGiaMua.getText()) <= 0) {
            Msgbox.alert(null, "Giá mua phải lơn hơn 0!");
            txtGiaBanLe.setText("");
            txtGiaBanLe.requestFocus();
            return false;
        }
        //validate gia si
//        if (txtGiaBanSi.getText().trim().equals("")) {
//            Msgbox.alert(null, "Không được để trống giá bán sỉ!");
//            txtGiaBanSi.setText("");
//            txtGiaBanSi.requestFocus();;
//            return false;
//        }
//        try {
//            Integer.parseInt(txtGiaBanSi.getText());
//        } catch (Exception e) {
//            Msgbox.alert(null, "Giá bán sỉ phải là số!");
//            txtGiaBanSi.setText("");
//            txtGiaBanSi.requestFocus();
//            return false;
//        }
//        lblGBS.setForeground(Color.white);
//        if (Integer.parseInt(txtGiaBanSi.getText()) <= 0) {
//            Msgbox.alert(null, "Giá bán sỉ phải lơn hơn 0!");
//            txtGiaBanSi.setText("");
//            txtGiaBanSi.requestFocus();
//            return false;
//        }
        //validate gia ban le
        if (txtGiaBanLe.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống giá bán lẻ!");
            txtGiaBanLe.setText("");
            txtGiaBanLe.requestFocus();
            return false;
        }
        try {
            Integer.parseInt(txtGiaBanLe.getText());
        } catch (Exception e) {
            Msgbox.alert(null, "Giá bán lẻ phải là số!");
            txtGiaBanLe.setText("");
            txtGiaBanLe.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtGiaBanLe.getText()) <= 0) {
            Msgbox.alert(null, "Giá bán lẻ phải lơn hơn 0!");
            txtGiaBanLe.setText("");
            txtGiaBanLe.requestFocus();
            return false;
        }
        //validate bao hanh
        if (txtTGBH.getText().trim().equals("")) {
            Msgbox.alert(null, "Không được để trống thời gian bảo hành!");
            txtTGBH.setText("");
            txtTGBH.requestFocus();
            return false;
        }
        try {
            Integer.parseInt(txtTGBH.getText());
        } catch (Exception e) {
            Msgbox.alert(null, "Thời gian bảo hành phải là số!");
            txtTGBH.setText("");
            txtTGBH.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtTGBH.getText()) <= 0) {
            Msgbox.alert(null, "Thời gian bảo hành phải lơn hơn 0!");
            txtTGBH.setText("");
            txtTGBH.requestFocus();
            return false;
        }
        //validate hinh mh
        if (lblHinhMH.getToolTipText() == null) {
            Msgbox.alert(null, "Bạn chưa chọn ảnh!");
            lblHMH.setForeground(Color.red);
            return false;
        }
        return true;
    }

    private void clear() {
        try {
            if (Msgbox.confirm(null, "Bạn có muốn tạo mới không?")) {
                txtMaMH.setText("");
                txtTenMH.setText("");
                txtRAM.setText("");
                txtDungLuong.setText("");
                txtMauSac.setText("");
                txtGiaMua.setText("");
                txtGiaBanLe.setText("");
                txtTGBH.setText("");
                lblHinhMH.setToolTipText(null);
                lblHinhMH.setIcon(null);
                cboHSX.setSelectedIndex(0);
                cboQuocGia.setSelectedIndex(0);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void insert() {
        MatHang mh = getForm();
        try {
            dao.insert(mh);
            Msgbox.alert(this, "Thêm mới thành công!");
        } catch (Exception e) {
            Msgbox.alert(this, "Thêm mới thất bại!");
            e.printStackTrace();
        }
    }
    
    private MatHang getForm() {
        MatHang mh = new MatHang();
        HangSanXuat hsx = (HangSanXuat) cboHSX.getSelectedItem();
        QuocGia qg = (QuocGia) cboQuocGia.getSelectedItem();
        mh.setMaMH(txtMaMH.getText().trim());
        mh.setTenMH(txtTenMH.getText().trim());
        mh.setMaHSX(hsx.getMaHSX());
        mh.setrAM(Integer.parseInt(txtRAM.getText().trim()));
        mh.setDungLuong(Integer.parseInt(txtRAM.getText().trim()));
        mh.setMauSac(txtMauSac.getText().trim());
        mh.setMaQG(qg.getMaQG());
        mh.setHinhMH(lblHinhMH.getToolTipText());
        mh.settGBH(Integer.parseInt(txtTGBH.getText()));
        mh.setGiaMua(Double.parseDouble(txtGiaMua.getText()));
        mh.setGiaBanLe(Double.parseDouble(txtGiaBanLe.getText()));
//        mh.setGiaBanSi(Double.parseDouble(txtGiaBanSi.getText()));
        mh.setSoLuong(0);
        mh.setTrangThai(true);
        return mh;
    }
}
