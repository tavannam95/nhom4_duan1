/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mobilez.ui;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.mobilez.utils.Auth;
import com.mobilez.utils.JdbcHelper;
import com.mobilez.utils.Msgbox;
import com.mobilez.utils.StringToPrice;
import com.mobilez.utils.StringToPrice;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author uhtku
 */
public class FrmHoaDonBanLe extends javax.swing.JPanel {

    /**
     * Creates new form FrmHoaDonBanLe
     */
    DefaultTableModel modelMatHang = new DefaultTableModel();
    DefaultTableModel modelHoaDon = new DefaultTableModel();
    long tongTien = 0;
    int indexMatHang = -1;
    int indexHoaDon = -1;
    long tongtienKM = 0;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    boolean maKM = false;

    public FrmHoaDonBanLe() {
        initComponents();
        modelMatHang = (DefaultTableModel) tblMatHang.getModel();
        modelHoaDon = (DefaultTableModel) tblHoaDonChiTiet.getModel();
        filltoTableMatHang();
        selectQuayHang();
    }

    /**
     * This method is called from within the constructor to i nitialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnThemHoaDon = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMatHang = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblKhachHang1 = new javax.swing.JLabel();
        lblKho = new javax.swing.JLabel();
        lblDSMH = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDonChiTiet = new javax.swing.JTable();
        btnXoaAll = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnInHoaDon = new javax.swing.JButton();
        lblTongGia = new javax.swing.JLabel();
        lblHoaDonCT = new javax.swing.JLabel();
        lblDSMH1 = new javax.swing.JLabel();
        lblQuayHang = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaMH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenMatHang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGiaBanLe = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        lblTongTien = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        btnApDung = new javax.swing.JButton();

        setBackground(new java.awt.Color(34, 116, 173));

        btnThemHoaDon.setBackground(new java.awt.Color(34, 116, 173));
        btnThemHoaDon.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnThemHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnThemHoaDon.setText("Thêm vào hóa đơn");
        btnThemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHoaDonActionPerformed(evt);
            }
        });

        tblMatHang.setBackground(new java.awt.Color(34, 116, 173));
        tblMatHang.setFont(new java.awt.Font("Baloo 2", 0, 13)); // NOI18N
        tblMatHang.setForeground(new java.awt.Color(255, 255, 255));
        tblMatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã MH", "HSX", "Tên MH", "RAM", "Dung lượng", "Màu", "Quốc gia", "Giá bán lẻ", "Số lượng trong quầy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMatHang.setGridColor(new java.awt.Color(255, 255, 255));
        tblMatHang.setRowHeight(25);
        tblMatHang.setSelectionBackground(new java.awt.Color(51, 51, 51));
        tblMatHang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblMatHang.setShowGrid(true);
        tblMatHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMatHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMatHang);
        if (tblMatHang.getColumnModel().getColumnCount() > 0) {
            tblMatHang.getColumnModel().getColumn(3).setPreferredWidth(20);
            tblMatHang.getColumnModel().getColumn(4).setPreferredWidth(50);
            tblMatHang.getColumnModel().getColumn(8).setPreferredWidth(130);
        }

        lblSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mobilez/icon/search_32px.png"))); // NOI18N

        txtSearch.setBackground(new java.awt.Color(34, 116, 173));
        txtSearch.setForeground(new java.awt.Color(255, 255, 255));
        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblKhachHang1.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblKhachHang1.setForeground(new java.awt.Color(255, 255, 255));
        lblKhachHang1.setText("Mặt hàng");

        lblKho.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 18)); // NOI18N
        lblKho.setForeground(new java.awt.Color(255, 255, 255));
        lblKho.setText("Quầy:");

        lblDSMH.setFont(new java.awt.Font("Baloo 2 ExtraBold", 0, 24)); // NOI18N
        lblDSMH.setForeground(new java.awt.Color(255, 255, 255));
        lblDSMH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDSMH.setText("DANH SÁCH MẶT HÀNG");

        tblHoaDonChiTiet.setBackground(new java.awt.Color(34, 116, 173));
        tblHoaDonChiTiet.setFont(new java.awt.Font("Baloo 2", 0, 13)); // NOI18N
        tblHoaDonChiTiet.setForeground(new java.awt.Color(255, 255, 255));
        tblHoaDonChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã mặt hàng", "Tên mặt hàng", "Giá bán lẻ", "Số lượng trong quầy", "Số lượng bán", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonChiTiet.setGridColor(new java.awt.Color(255, 255, 255));
        tblHoaDonChiTiet.setRowHeight(25);
        tblHoaDonChiTiet.setSelectionBackground(new java.awt.Color(51, 51, 51));
        tblHoaDonChiTiet.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblHoaDonChiTiet.setShowGrid(true);
        tblHoaDonChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHoaDonChiTiet);

        btnXoaAll.setBackground(new java.awt.Color(34, 116, 173));
        btnXoaAll.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnXoaAll.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaAll.setText("Xóa tất cả");
        btnXoaAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaAllActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(34, 116, 173));
        btnXoa.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnInHoaDon.setBackground(new java.awt.Color(34, 116, 173));
        btnInHoaDon.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnInHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnInHoaDon.setText("In hóa đơn");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        lblTongGia.setFont(new java.awt.Font("Baloo Chettan 2", 1, 14)); // NOI18N
        lblTongGia.setForeground(new java.awt.Color(255, 255, 255));
        lblTongGia.setText("Tổng thanh toán:");

        lblHoaDonCT.setFont(new java.awt.Font("Baloo 2 ExtraBold", 0, 24)); // NOI18N
        lblHoaDonCT.setForeground(new java.awt.Color(255, 255, 255));
        lblHoaDonCT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHoaDonCT.setText("HÓA ĐƠN CHI TIẾT");

        lblDSMH1.setFont(new java.awt.Font("Baloo 2 ExtraBold", 0, 24)); // NOI18N
        lblDSMH1.setForeground(new java.awt.Color(255, 255, 255));
        lblDSMH1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDSMH1.setText("Cập nhật");

        lblQuayHang.setFont(new java.awt.Font("Baloo 2", 0, 18)); // NOI18N
        lblQuayHang.setForeground(new java.awt.Color(255, 255, 255));
        lblQuayHang.setText("Quầy hàng 1");

        jLabel2.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã mặt hàng:");

        txtMaMH.setEditable(false);
        txtMaMH.setBackground(new java.awt.Color(34, 116, 173));
        txtMaMH.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tên mặt hàng:");

        txtTenMatHang.setEditable(false);
        txtTenMatHang.setBackground(new java.awt.Color(34, 116, 173));
        txtTenMatHang.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Giá bán lẻ:");

        txtGiaBanLe.setEditable(false);
        txtGiaBanLe.setBackground(new java.awt.Color(34, 116, 173));
        txtGiaBanLe.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Số lượng:");

        txtSoLuong.setBackground(new java.awt.Color(34, 116, 173));
        txtSoLuong.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N

        lblTongTien.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 24)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 0));
        lblTongTien.setText("0VND");

        jLabel6.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mã khuyến mãi:");

        txtMaKM.setBackground(new java.awt.Color(34, 116, 173));
        txtMaKM.setFont(new java.awt.Font("Baloo 2 ExtraBold", 1, 14)); // NOI18N

        btnApDung.setBackground(new java.awt.Color(34, 116, 173));
        btnApDung.setFont(new java.awt.Font("Baloo 2", 1, 12)); // NOI18N
        btnApDung.setForeground(new java.awt.Color(255, 255, 255));
        btnApDung.setText("Áp dụng");
        btnApDung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApDungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 321, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDSMH, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblKho)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblQuayHang, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(101, 101, 101))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblKhachHang1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDSMH1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtGiaBanLe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtTenMatHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtMaMH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnThemHoaDon)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(420, 420, 420)
                        .addComponent(lblHoaDonCT, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaAll))
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTongGia, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApDung)
                        .addGap(12, 12, 12)
                        .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(258, 258, 258)
                        .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDSMH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblKhachHang1)
                        .addComponent(lblDSMH1)
                        .addComponent(lblKho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblQuayHang, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaBanLe, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemHoaDon))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnXoaAll)
                    .addComponent(lblHoaDonCT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnApDung))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTongGia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHoaDonActionPerformed
        // TODO add your handling code here:
        if (checkForm()) {
            filltoHoaDon();
            clear();
        }

//        if (indexMatHang<0) {
//                Msgbox.alert(null, "Bạn chưa chọn mặt hàng!");
//                return;
//            }
    }//GEN-LAST:event_btnThemHoaDonActionPerformed

    private void tblMatHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMatHangMouseClicked
        // TODO add your handling code here:
        indexMatHang = tblMatHang.getSelectedRow();
        int soLuongtrongQuay = Integer.parseInt(tblMatHang.getValueAt(indexMatHang, 8).toString());
        if (soLuongtrongQuay == 0) {
            Msgbox.alert(null, "Mặt hàng trong quầy đã hết vui lòng lập phiếu xuất kho!!");
            return;
        }

        this.showDetail();
        tblMatHang.setRowSelectionInterval(indexMatHang, indexMatHang);
    }//GEN-LAST:event_tblMatHangMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        indexMatHang = -1;
        selectTblMatHang(txtSearch.getText());
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblHoaDonChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMouseClicked
        // TODO add your handling code here:
        indexHoaDon = tblHoaDonChiTiet.getSelectedRow();
    }//GEN-LAST:event_tblHoaDonChiTietMouseClicked

    private void btnXoaAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaAllActionPerformed
        // TODO add your handling code here:
        if (Msgbox.confirm(null, "Bạn có muốn làm mới danh sách hóa đơn chi tiết không?")) {
            modelHoaDon.setRowCount(0);
            lblTongTien.setText("0 VND");
            tongTien = 0;
            maKM = false;
            this.filltoTableMatHang();
        }
    }//GEN-LAST:event_btnXoaAllActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        deleteHoaDOn();
        maKM = false;
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        // TODO add your handling code here:
        if (tblHoaDonChiTiet.getRowCount() <= 0) {
            Msgbox.alert(null, "Danh sách trống!");
            return;
        }
        if (Msgbox.confirm(null, "Bạn có muốn in hóa đơn không?")) {
            inHoaDon();
        }


    }//GEN-LAST:event_btnInHoaDonActionPerformed

    private void btnApDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApDungActionPerformed

        checkMKH();
    }//GEN-LAST:event_btnApDungActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApDung;
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnThemHoaDon;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaAll;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDSMH;
    private javax.swing.JLabel lblDSMH1;
    private javax.swing.JLabel lblHoaDonCT;
    private javax.swing.JLabel lblKhachHang1;
    private javax.swing.JLabel lblKho;
    private javax.swing.JLabel lblQuayHang;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTongGia;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTable tblHoaDonChiTiet;
    private javax.swing.JTable tblMatHang;
    private javax.swing.JTextField txtGiaBanLe;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtMaMH;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenMatHang;
    // End of variables declaration//GEN-END:variables

    private void filltoTableMatHang() {
        try {
            String query = "select MATHANG.MAMH,TENHSX,TENMH,RAM,DUNGLUONG,MAUSAC,TENQG,GIABAN, CHITIETQUAYHANG.SOLUONG\n"
                    + "                    from MATHANG join CHITIETQUAYHANG ON MATHANG.MAMH=CHITIETQUAYHANG.MAMH\n"
                    + "                    join HANGSANXUAT on MATHANG.MAHSX=HANGSANXUAT.MAHSX\n"
                    + "                    join QUOCGIA on MATHANG.MAQG=QUOCGIA.MAQG\n"
                    + "                    where MAQH = ?";
            ResultSet rs = JdbcHelper.query(query, Auth.maQuay);
            modelMatHang.setRowCount(0);
            while (rs.next()) {
                int ram = rs.getInt("RAM");
                int dungLuong = rs.getInt("DungLuong");
                int soluong = rs.getInt(9);
                modelMatHang.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), ram + "GB",
                    dungLuong + "GB", rs.getString(6), rs.getString(7), rs.getInt(8), soluong});
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void selectTblMatHang(String keywork) {
        try {
            String query = "select MATHANG.MAMH,TENHSX,TENMH,RAM,DUNGLUONG,MAUSAC,TENQG,GIABAN, CHITIETQUAYHANG.SOLUONG\n"
                    + "                    from MATHANG join CHITIETQUAYHANG ON MATHANG.MAMH=CHITIETQUAYHANG.MAMH\n"
                    + "                    join HANGSANXUAT on MATHANG.MAHSX=HANGSANXUAT.MAHSX\n"
                    + "                    join QUOCGIA on MATHANG.MAQG=QUOCGIA.MAQG\n"
                    + "                    where MAQH = ? and (MATHANG.MAMH like N'%" + keywork + "%' or tenMH like N'%" + keywork + "%' or tenHSX like N'%" + keywork + "%')";
            ResultSet rs = JdbcHelper.query(query, Auth.maQuay);
            modelMatHang.setRowCount(0);
            while (rs.next()) {
                int ram = rs.getInt("RAM");
                int dungLuong = rs.getInt("DungLuong");
                int soluong = rs.getInt(9);
                modelMatHang.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), ram + "GB",
                    dungLuong + "GB", rs.getString(6), rs.getString(7), rs.getInt(8), soluong});
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void showDetail() {
        txtMaMH.setText(tblMatHang.getValueAt(indexMatHang, 0).toString());
        txtTenMatHang.setText(tblMatHang.getValueAt(indexMatHang, 2).toString());
        txtGiaBanLe.setText(tblMatHang.getValueAt(indexMatHang, 7).toString());
        txtSoLuong.setText("");
    }

    private void filltoHoaDon() {
        int thanhtien;
        int soluong = Integer.parseInt(txtSoLuong.getText());
        int dongia = Integer.parseInt(txtGiaBanLe.getText());
        int soluongtrongQuay = Integer.parseInt(tblMatHang.getValueAt(indexMatHang, 8).toString());
        thanhtien = soluong * dongia;
        modelHoaDon.addRow(new Object[]{txtMaMH.getText(), txtTenMatHang.getText(), dongia, soluongtrongQuay, soluong, thanhtien});
        tongTien += thanhtien;
        String price = String.valueOf(tongTien);
        lblTongTien.setText(StringToPrice.getPrice(price));
        modelMatHang.removeRow(indexMatHang);
    }

    private boolean checkForm() {
        if (indexMatHang == -1) {
            Msgbox.alert(null, "Bạn chưa chọn mặt hàng cần thêm!");
            return false;
        }
        int soluongtrongquay = Integer.parseInt(tblMatHang.getValueAt(indexMatHang, 8).toString());
        int soluongnhap;
        if (tblMatHang.getRowCount() <= 0) {
            Msgbox.alert(null, "Danh sách trống!");
            return false;
        }
        if (txtSoLuong.getText().trim().equals("")) {
            Msgbox.alert(null, "Số lượng không được để trống");
            return false;
        }
        int soLuongtrongQuay = Integer.parseInt(tblMatHang.getValueAt(indexMatHang, 8).toString());
        try {
            soluongnhap = Integer.parseInt(txtSoLuong.getText());
            if (soluongnhap < 1) {
                Msgbox.alert(null, "Số lượng phải lớn hơn 0!");
                return false;
            }
        } catch (Exception e) {
            Msgbox.alert(null, "Số lượng phải là số!");
            e.printStackTrace();
            return false;
        }
        if (soluongnhap > soLuongtrongQuay) {
            Msgbox.alert(null, "Số lượng trong kho không đủ!!");
            return false;
        }
        return true;
    }

    private void inHoaDon() {
        try {
            int maHDBL = 0;
            String insertHDBL = "insert into HOADONBANLE values (?,?,?)";
            if (!maKM) {
                tongtienKM = tongTien;
            }
            JdbcHelper.update(insertHDBL, Auth.user.getMaNV(), new Date(), tongtienKM);
            String querymaHDBL = "select top (1) MAHDBL from HOADONBANLE order by MaHDBL desc";
            ResultSet rs = JdbcHelper.query(querymaHDBL);
            if (rs.next()) {
                maHDBL = rs.getInt("MAHDBL");
                String insertCTHDBL = "insert into CHITIETHOADONBANLE values (?,?,?,?)";
                String updateQuayHang = "Update ChiTietQuayHang set soluong = soluong - ? where maQH = ? and maMH = ?";
                String insertCTPGC = "insert into CHITIETPHIEUGIAOCA values (?,?,?)";
                String updateMatHang = "Update MatHang set soluong = soluong - ? where mamh = ?";
                String updateChiTietPGC = "update CHITIETPHIEUGIAOCA set soluong = soluong + ? where MAMH = ? and MAPGC = ?";
                String queryCHITIETPGC = "select * from CHITIETPHIEUGIAOCA where MAMH = ? and MAPGC = ?";
                for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
                    String maMH = tblHoaDonChiTiet.getValueAt(i, 0).toString();
                    int soLuong = Integer.parseInt(tblHoaDonChiTiet.getValueAt(i, 4).toString());
                    int donGia = Integer.parseInt(tblHoaDonChiTiet.getValueAt(i, 2).toString());
                    ResultSet rs2 = JdbcHelper.query(queryCHITIETPGC, maMH, Auth.maPGC);
                    JdbcHelper.update(insertCTHDBL, maHDBL, maMH, soLuong, donGia);
                    JdbcHelper.update(updateQuayHang, soLuong, Auth.maQuay, maMH);
                    if (rs2.next()) {
                        JdbcHelper.update(updateChiTietPGC, soLuong, maMH, Auth.maPGC);
                    } else {
                        JdbcHelper.update(insertCTPGC, Auth.maPGC, maMH, soLuong);
                    }

                    JdbcHelper.update(updateMatHang, soLuong, maMH);
                }
            }
            inHoaDonPDF();
            modelHoaDon.setRowCount(0);
            lblTongTien.setText("0 VND");
            filltoTableMatHang();
            txtMaKM.setText("");
            clear();
            tongTien = 0;
            tongtienKM = 0;
            maKM = false;
            Msgbox.alert(this, "In thành công");
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "In thất bại");
        }
    }

    private void selectQuayHang() {
        try {
            String query = "Select tenQH from QUAYHANG where MaQH = ?";
            ResultSet rs = JdbcHelper.query(query, Auth.maQuay);
            if (rs.next()) {
                lblQuayHang.setText(rs.getString("TenQH"));
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        txtMaMH.setText("");
        txtGiaBanLe.setText("");
        txtSoLuong.setText("");
        txtTenMatHang.setText("");
        maKM = false;
    }

    private void deleteHoaDOn() {
        indexHoaDon = tblHoaDonChiTiet.getSelectedRow();
        if (tblHoaDonChiTiet.getRowCount() <= 0) {
            Msgbox.alert(null, "Danh sách trống!");
            return;
        }
        if (indexHoaDon == -1) {
            Msgbox.alert(null, "Bạn chưa chọn mặt hàng cần xóa!");
            return;
        }
        tongTien -= Integer.parseInt(tblHoaDonChiTiet.getValueAt(indexHoaDon, 5).toString());
        lblTongTien.setText(tongTien + " VND");
        try {

            String query = "select MATHANG.MAMH,TENHSX,TENMH,RAM,DUNGLUONG,MAUSAC,TENQG,GIABAN, CHITIETQUAYHANG.SOLUONG\n"
                    + "                    from MATHANG join CHITIETQUAYHANG ON MATHANG.MAMH=CHITIETQUAYHANG.MAMH\n"
                    + "                    join HANGSANXUAT on MATHANG.MAHSX=HANGSANXUAT.MAHSX\n"
                    + "                    join QUOCGIA on MATHANG.MAQG=QUOCGIA.MAQG\n"
                    + "                    where MAQH = ? and MATHANG.MAMH = ?";
            String maMH = tblHoaDonChiTiet.getValueAt(indexHoaDon, 0).toString();
            ResultSet rs = JdbcHelper.query(query, Auth.maQuay, maMH);
            if (rs.next()) {
                int ram = rs.getInt("RAM");
                int dungLuong = rs.getInt("DungLuong");
                int soluong = rs.getInt(9);
                modelMatHang.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), ram + "GB",
                    dungLuong + "GB", rs.getString(6), rs.getString(7), rs.getInt(8), soluong});
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        modelHoaDon.removeRow(indexHoaDon);
    }

    private void checkMKH() {
        long khuyenmai = 0;
        try {
            String query = "select * from KhuyenMai where MAKM = ?";
            ResultSet rs = JdbcHelper.query(query, txtMaKM.getText().trim());
            if (rs.next()) {
                int mucKM = rs.getInt("MucKM");
                Date now = new Date();
                Date ngayBD = rs.getDate("NgayBD");
                Date ngayKT = rs.getDate("NgayKT");
                if (now.compareTo(ngayBD) >= 0 && now.compareTo(ngayKT) <= 0) {
                    if (tongTien >= rs.getInt("DIEUKIEN")) {
                        if (rs.getBoolean("KIEUKM")) {
                            khuyenmai = tongTien * mucKM / 100;
                            if (khuyenmai > rs.getInt("GIAMTOIDA")) {
                                khuyenmai = rs.getInt("GIAMTOIDA");
                            }
                            tongtienKM = tongTien - khuyenmai;
                            Msgbox.alert(this, "Áp dụng mã thành công hóa đơn đã được giảm " + khuyenmai + " VND");
                        } else {
                            tongtienKM = tongTien - mucKM;
                            Msgbox.alert(this, "Áp dụng mã thành công hóa đơn đã được giảm " + mucKM + " VND");
                        }
                        lblTongTien.setText(StringToPrice.getPrice(String.valueOf(tongtienKM)));
                        maKM = true;
                    } else {
                        Msgbox.alert(this, "Mã chỉ áp dụng cho tổng tiền trên " + rs.getInt("DIEUKIEN") + " VND");
                        txtMaKM.requestFocus();
                        maKM = false;
                        lblTongTien.setText(StringToPrice.getPrice(String.valueOf(tongTien)));
                        return;
                    }
                } else {
                    Msgbox.alert(this, "Mã giảm giá đã hết hạn!!");
                    maKM = false;
                    lblTongTien.setText(StringToPrice.getPrice(String.valueOf(tongTien)));
                    txtMaKM.requestFocus();
                }
            } else {
                Msgbox.alert(this, "Mã khuyến mãi không tồn tại");
                maKM = false;
                lblTongTien.setText(StringToPrice.getPrice(String.valueOf(tongTien)));
                txtMaKM.requestFocus();
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void inHoaDonPDF() {
        try {
            SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy hh:mm:aa");
            Font f = new Font(BaseFont.createFont("font\\SVN-Arial 2.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
            f.setColor(BaseColor.BLACK);
            f.setSize(40);
            f.setStyle(Font.BOLD);
            Document document = new Document();
            document.setMargins(60, 60, 60, 60);
            // Tạo đối tượng PdfWriter
            PdfWriter.getInstance(document, new FileOutputStream("HoaDon.pdf"));
            // Mở file để thực hiện ghi
            document.open();
            Paragraph tieuDe = new Paragraph("MOBILEZ", f);
            tieuDe.setSpacingAfter(30); // 
            tieuDe.setAlignment(1); // Căn giữa
            document.add(tieuDe);
            f.setSize(22);
            Paragraph hoaDon = new Paragraph("HÓA ĐƠN BÁN HÀNG", f);
            hoaDon.setAlignment(1);
            document.add(hoaDon);
            f.setSize(15);
            Paragraph thongTin = new Paragraph("Ngày: " + sdf2.format(new Date()) + "\nQuầy: " + lblQuayHang.getText()
                    + "\nNhân viên: " + Auth.user.getHoTen(), f);
            thongTin.setSpacingBefore(30);
            document.add(thongTin);
            f.setSize(20);
            Paragraph keNgang = new Paragraph("- - - - - - - - - - - - - - - - - - - - - - - - -"
                    + " - - - - - - - - - - - - - -", f);
            document.add(keNgang);
            PdfPTable table = new PdfPTable(3);
            table.setWidthPercentage(100);
            f.setSize(15);
            PdfPCell c1 = new PdfPCell(new Phrase("   SL", f));
            c1.setFixedHeight(30);
            c1.setBorder(0);
            table.addCell(c1);
            PdfPCell c2 = new PdfPCell(new Phrase("Đơn giá", f));
            c2.setBorder(0);
            c2.setHorizontalAlignment(1);
            table.addCell(c2);
            PdfPCell c3 = new PdfPCell(new Phrase("Thành tiền", f));
            c3.setBorder(0);
            c3.setHorizontalAlignment(2);
            table.addCell(c3);

            //for
            for (int i = 0; i < modelHoaDon.getRowCount(); i++) {
                String maMH = tblHoaDonChiTiet.getValueAt(i, 0).toString();
                int soLuong = Integer.parseInt(tblHoaDonChiTiet.getValueAt(i, 4).toString());
                int donGia = Integer.parseInt(tblHoaDonChiTiet.getValueAt(i, 2).toString());
                String tenMH = tblHoaDonChiTiet.getValueAt(i, 1).toString();
                PdfPCell tenSP = new PdfPCell(new Phrase(tenMH, f)); // TENSP
                tenSP.setColspan(3);
                tenSP.setBorder(0);
                tenSP.setFixedHeight(30);
                table.addCell(tenSP);
                PdfPCell soluong = new PdfPCell(new Phrase("   " + soLuong + "", f));    // SOLUONG
                soluong.setBorder(0);
                String donGiaString = StringToPrice.getPrice(String.valueOf(donGia)).replace(" VND", "");
                PdfPCell donGiaHD = new PdfPCell(new Phrase(donGiaString, f)); // DON GIA
                donGiaHD.setHorizontalAlignment(1);
                donGiaHD.setBorder(0);
                String thanhTienString = StringToPrice.getPrice(String.valueOf(soLuong * donGia)).replace(" VND", "");
                PdfPCell thanhtien = new PdfPCell(new Phrase(thanhTienString, f)); // THANH TIEN
                thanhtien.setHorizontalAlignment(2);
                thanhtien.setBorder(0);
                table.addCell(soluong);
                table.addCell(donGiaHD);
                table.addCell(thanhtien);

                f.setSize(20);
            }
            document.add(table);
            document.add(keNgang);
            f.setSize(15);

            //TongTienHang
            PdfPTable tblTongTien = new PdfPTable(2);
            tblTongTien.setWidthPercentage(100);
            PdfPCell tongTien1 = new PdfPCell(new Phrase("Tổng tiền hàng:", f));
            tongTien1.setFixedHeight(30);
            tongTien1.setBorder(0);
            String tongTienHD = StringToPrice.getPrice(String.valueOf(tongTien));
            PdfPCell tongTien2 = new PdfPCell(new Phrase(tongTienHD, f));
            tongTien2.setHorizontalAlignment(2);
            tongTien2.setFixedHeight(30);
            tongTien2.setBorder(0);
            tblTongTien.addCell(tongTien1);
            tblTongTien.addCell(tongTien2);
            // KhuyenMai
            PdfPCell khuyenMai1 = new PdfPCell(new Phrase("Khuyến mãi:", f));
            khuyenMai1.setFixedHeight(30);
            khuyenMai1.setBorder(0);
            String KhuyenMaiHD = StringToPrice.getPrice(String.valueOf(tongTien - tongtienKM));
            PdfPCell khuyenMai2 = new PdfPCell(new Phrase(KhuyenMaiHD, f));
            khuyenMai2.setHorizontalAlignment(2);
            khuyenMai2.setFixedHeight(30);
            khuyenMai2.setBorder(0);
            tblTongTien.addCell(khuyenMai1);
            tblTongTien.addCell(khuyenMai2);
            // TongThanhToan
            PdfPCell tongTT1 = new PdfPCell(new Phrase("Tổng thanh toán:", f));
            tongTT1.setFixedHeight(30);
            tongTT1.setBorder(0);
            String tongTTHD = StringToPrice.getPrice(String.valueOf(tongtienKM));
            PdfPCell tongTT2 = new PdfPCell(new Phrase(tongTTHD, f));
            tongTT2.setHorizontalAlignment(2);
            tongTT2.setFixedHeight(30);
            tongTT2.setBorder(0);
            tblTongTien.addCell(tongTT1);
            tblTongTien.addCell(tongTT2);
            document.add(tblTongTien);
            f.setSize(20);
            document.add(keNgang);
            f.setSize(15);

            //Footer
            Paragraph fooTer = new Paragraph("Quý khách vui lòng kiểm tra hàng trước khi rời khỏi cửa hàng"
                    + "\n - - - - - - - - - - - - -"
                    + "\n Cảm ơn quý khách, hẹn gặp lại!", f);
            fooTer.setSpacingBefore(15);
            fooTer.setAlignment(1);
            document.add(fooTer);

            document.close();
            System.out.println("Write file succes!");
        } catch (FileNotFoundException | DocumentException e) {
            e.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(Runnable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
